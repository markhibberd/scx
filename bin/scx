#!/bin/sh
#
# scx - a scala compilation utility with support for cross compilation
#
# http://scx.mth.io
# https://github.com/markhibberd/scx
#

usage() {
  echo "usage: `basename $0` [-j|--java VERSION] [-cp|-classpath CLASSPATH] [-x|--x-compile SCALAC] <src-directory> <trg-directory>"
}

while echo $1 | grep -q '^-'; do
  case $1 in
  -cp|-classpath) 
    shift
    CLASSPATH="$1"
    ;;
  -j|--java)
    shift
    JAVA=true
    JAVA_VERSION=$1
    ;;
  -x|--x-compile)
    shift
    SCALACS="$SCALA_HOME $1"
    ;;
  --)
    shift
    break
    ;;
  *)
    echo "Unknown flag [$1]" 1>&2
    usage 2>&1
    ;;
  esac
  shift
done

if [ $# -ne 2 ]; then
  usage 1>&2  
  exit 1
fi

SRC_DIR="$1"
TRG_DIR="$2"

if [ ! -d "$TRG_DIR" ]; then
  echo "target directory [$TRG_DIR] does not exists." 1>&2
  exit 10
fi

: ${SOURCE_LIST:=$TRG_DIR/.scx.$$}
: ${JAVA_SOURCE_LIST:=$TRG_DIR/.scx.java.$$}
: ${CLASSPATH:=.}
#: ${SCALACS:=`which scalac`}

find "$SRC_DIR" -name "*.scala" > "$SOURCE_LIST"

if [ x"$JAVA" = x"true" ]; then
  find "$SRC_DIR" -name "*.java" > "$JAVA_SOURCE_LIST"
  cat "$JAVA_SOURCE_LIST" >> "$SOURCE_LIST"
fi


infer_version() {
  scalac -version 2>&1 | sed  -e 's/Scala compiler version \([0-9.a-z]*\).*/\1/'
}

VERSION=`infer_version`

mkdir -p "$TRG_DIR/$VERSION"
scalac -classpath "$CLASSPATH" -d "$TRG_DIR/$VERSION" @"$SOURCE_LIST"

if [ x"$JAVA" = x"true" ]; then
    javac -classpath "$CLASSPATH":"$TRG_DIR/$VERSION" -source $JAVA_VERSION -target $JAVA_VERSION -d "$TRG_DIR/$VERSION" @"$JAVA_SOURCE_LIST"
fi